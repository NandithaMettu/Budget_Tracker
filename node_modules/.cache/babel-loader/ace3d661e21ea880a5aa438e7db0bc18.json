{"ast":null,"code":"var _jsxFileName = \"C:\\\\mern stack\\\\speechly_expense_tracker_project\\\\src\\\\components\\\\Main\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport Snackbar from '../../Snackbar/Snackbar';\nimport formatDate from '../../../utils/formatDate';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport useStyles from './styles';\nconst initialState = {\n  amount: '',\n  category: '',\n  type: 'Income',\n  date: formatDate(new Date())\n};\nconst NewTransactionForm = () => {\n  _s();\n  const classes = useStyles();\n  const {\n    addTransaction\n  } = useContext(ExpenseTrackerContext);\n  const [formData, setFormData] = useState(initialState);\n  const [open, setOpen] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n    if (incomeCategories.map(iC => iC.type).includes(formData.category)) {\n      setFormData({\n        ...formData,\n        type: 'Income'\n      });\n    } else if (expenseCategories.map(iC => iC.type).includes(formData.category)) {\n      setFormData({\n        ...formData,\n        type: 'Expense'\n      });\n    }\n    setOpen(true);\n    addTransaction({\n      ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4()\n    });\n    setFormData(initialState);\n  };\n  useEffect(() => {\n    if (transcript) {\n      const commands = transcript.split(' ');\n      if (commands.includes('add') && commands.includes('expense')) {\n        setFormData(prevData => ({\n          ...prevData,\n          type: 'Expense'\n        }));\n      } else if (commands.includes('add') && commands.includes('income')) {\n        setFormData(prevData => ({\n          ...prevData,\n          type: 'Income'\n        }));\n      } else if (commands.includes('create') || commands.includes('finish') || commands.includes('save')) {\n        createTransaction();\n      } else if (commands.includes('cancel') || commands.includes('delete') || commands.includes('remove') || commands.includes('clear')) {\n        setFormData(initialState);\n      } else {\n        commands.forEach((command, index) => {\n          if (command === 'amount') {\n            const amountIndex = index + 1;\n            const amountValue = commands[amountIndex];\n            if (!isNaN(amountValue)) {\n              setFormData(prevData => ({\n                ...prevData,\n                amount: amountValue\n              }));\n            }\n          } else if (command === 'category') {\n            const categoryIndex = index + 1;\n            const categoryValue = commands[categoryIndex];\n            setFormData(prevData => ({\n              ...prevData,\n              category: categoryValue\n            }));\n          } else if (command === 'date') {\n            const dateIndex = index + 1;\n            const dateValue = commands.slice(dateIndex).join(' ');\n            setFormData(prevData => ({\n              ...prevData,\n              date: formatDate(new Date(dateValue))\n            }));\n          }\n        });\n      }\n    }\n  }, [transcript]);\n  useEffect(() => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.onresult = event => {\n      const interimTranscript = Array.from(event.results).map(result => result[0].transcript).join('');\n      setTranscript(interimTranscript);\n    };\n    recognition.start();\n    return () => recognition.stop();\n  }, []);\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, transcript ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"segment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, transcript) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.type,\n    onChange: e => setFormData({\n      ...formData,\n      type: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Income\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Expense\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.category,\n    onChange: e => setFormData({\n      ...formData,\n      category: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, selectedCategories.map(c => /*#__PURE__*/React.createElement(MenuItem, {\n    key: c.type,\n    value: c.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, c.type))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    label: \"Amount\",\n    value: formData.amount,\n    onChange: e => setFormData({\n      ...formData,\n      amount: e.target.value\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Date\",\n    type: \"date\",\n    value: formData.date,\n    onChange: e => setFormData({\n      ...formData,\n      date: formatDate(e.target.value)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: createTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, \"Create\"));\n};\n_s(NewTransactionForm, \"VlhyrasrQaLHpDU5gvWkyv4h1No=\", false, function () {\n  return [useStyles];\n});\n_c = NewTransactionForm;\nexport default NewTransactionForm;\nvar _c;\n$RefreshReg$(_c, \"NewTransactionForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","TextField","Typography","Grid","Button","FormControl","InputLabel","Select","MenuItem","v4","uuidv4","Snackbar","formatDate","ExpenseTrackerContext","incomeCategories","expenseCategories","useStyles","initialState","amount","category","type","date","Date","NewTransactionForm","_s","classes","addTransaction","formData","setFormData","open","setOpen","transcript","setTranscript","createTransaction","Number","isNaN","includes","map","iC","id","commands","split","prevData","forEach","command","index","amountIndex","amountValue","categoryIndex","categoryValue","dateIndex","dateValue","slice","join","recognition","window","webkitSpeechRecognition","continuous","interimResults","onresult","event","interimTranscript","Array","from","results","result","start","stop","selectedCategories","createElement","container","spacing","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","item","xs","align","variant","gutterBottom","className","fullWidth","value","onChange","e","target","c","key","label","button","color","onClick","_c","$RefreshReg$"],"sources":["C:/mern stack/speechly_expense_tracker_project/src/components/Main/Form/Form.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [open, setOpen] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (transcript) {\r\n      const commands = transcript.split(' ');\r\n\r\n      if (commands.includes('add') && commands.includes('expense')) {\r\n        setFormData((prevData) => ({ ...prevData, type: 'Expense' }));\r\n      } else if (commands.includes('add') && commands.includes('income')) {\r\n        setFormData((prevData) => ({ ...prevData, type: 'Income' }));\r\n      } else if (commands.includes('create') || commands.includes('finish') || commands.includes('save')) {\r\n        createTransaction();\r\n      } else if (commands.includes('cancel') || commands.includes('delete') || commands.includes('remove') || commands.includes('clear')) {\r\n        setFormData(initialState);\r\n      } else {\r\n        commands.forEach((command, index) => {\r\n          if (command === 'amount') {\r\n            const amountIndex = index + 1;\r\n            const amountValue = commands[amountIndex];\r\n            if (!isNaN(amountValue)) {\r\n              setFormData((prevData) => ({ ...prevData, amount: amountValue }));\r\n            }\r\n          } else if (command === 'category') {\r\n            const categoryIndex = index + 1;\r\n            const categoryValue = commands[categoryIndex];\r\n            setFormData((prevData) => ({ ...prevData, category: categoryValue }));\r\n          } else if (command === 'date') {\r\n            const dateIndex = index + 1;\r\n            const dateValue = commands.slice(dateIndex).join(' ');\r\n            setFormData((prevData) => ({ ...prevData, date: formatDate(new Date(dateValue)) }));\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [transcript]);\r\n\r\n  useEffect(() => {\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n\r\n    recognition.onresult = (event) => {\r\n      const interimTranscript = Array.from(event.results)\r\n        .map((result) => result[0].transcript)\r\n        .join('');\r\n      setTranscript(interimTranscript);\r\n    };\r\n\r\n    recognition.start();\r\n\r\n    return () => recognition.stop();\r\n  }, []);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {transcript ? <div className=\"segment\">{transcript}</div> : null}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Date\"\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })}\r\n        />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}