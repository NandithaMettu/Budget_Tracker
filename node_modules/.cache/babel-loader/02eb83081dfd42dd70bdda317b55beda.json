{"ast":null,"code":"var _jsxFileName = \"C:\\\\mern stack\\\\speechly_expense_tracker_project\\\\src\\\\components\\\\Main\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport Snackbar from '../../Snackbar/Snackbar';\nimport formatDate from '../../../utils/formatDate';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport useStyles from './styles';\nconst initialState = {\n  amount: '',\n  category: '',\n  type: 'Income',\n  date: formatDate(new Date())\n};\nconst NewTransactionForm = () => {\n  _s();\n  const classes = useStyles();\n  const {\n    addTransaction\n  } = useContext(ExpenseTrackerContext);\n  const [formData, setFormData] = useState(initialState);\n  const [transcript, setTranscript] = useState('');\n  const [recognition, setRecognition] = useState(null);\n  const [listening, setListening] = useState(false);\n  const [open, setOpen] = useState(false);\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n    if (incomeCategories.map(iC => iC.type).includes(formData.category)) {\n      setFormData({\n        ...formData,\n        type: 'Income'\n      });\n    } else if (expenseCategories.map(iC => iC.type).includes(formData.category)) {\n      setFormData({\n        ...formData,\n        type: 'Expense'\n      });\n    }\n    setOpen(true);\n    addTransaction({\n      ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4()\n    });\n    setFormData(initialState);\n  };\n  useEffect(() => {\n    const speechRecognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    speechRecognition.continuous = true;\n    speechRecognition.interimResults = true;\n    speechRecognition.lang = 'en-US';\n    speechRecognition.onresult = event => {\n      const speechToText = Array.from(event.results).map(result => result[0].transcript).join('');\n      setTranscript(speechToText);\n    };\n    setRecognition(speechRecognition);\n  }, []);\n  const startListening = () => {\n    if (recognition) {\n      recognition.start();\n      setListening(true);\n    }\n  };\n  const stopListening = () => {\n    if (recognition) {\n      recognition.stop();\n      setListening(false);\n    }\n  };\n  useEffect(() => {\n    if (transcript) {\n      const commands = transcript.toLowerCase().split(' ');\n      if (commands.includes('add') && commands.includes('expense')) {\n        setFormData(prevData => ({\n          ...prevData,\n          type: 'Expense'\n        }));\n      } else if (commands.includes('add') && commands.includes('income')) {\n        setFormData(prevData => ({\n          ...prevData,\n          type: 'Income'\n        }));\n      } else if (commands.includes('create') || commands.includes('finish') || commands.includes('save')) {\n        createTransaction();\n      } else if (commands.includes('cancel') || commands.includes('delete') || commands.includes('remove') || commands.includes('clear')) {\n        setFormData(initialState);\n      } else {\n        commands.forEach((command, index) => {\n          if (command === 'amount' && index < commands.length - 1) {\n            const amountValue = commands[index + 1];\n            if (!isNaN(amountValue)) {\n              setFormData(prevData => ({\n                ...prevData,\n                amount: amountValue\n              }));\n            }\n          } else if (command === 'category' && index < commands.length - 1) {\n            const categoryValue = commands[index + 1];\n            setFormData(prevData => ({\n              ...prevData,\n              category: categoryValue\n            }));\n          } else if (command === 'date' && index < commands.length - 1) {\n            const dateValue = commands.slice(index + 1).join(' ');\n            setFormData(prevData => ({\n              ...prevData,\n              date: formatDate(new Date(dateValue))\n            }));\n          }\n        });\n      }\n    }\n  }, [transcript]);\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, transcript ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"segment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, transcript) : 'Start speaking to add a transaction...')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      gap: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: startListening,\n    disabled: listening,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Start Listening\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: stopListening,\n    disabled: !listening,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Stop Listening\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.type,\n    onChange: e => setFormData({\n      ...formData,\n      type: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Income\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Expense\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.category,\n    onChange: e => setFormData({\n      ...formData,\n      category: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, selectedCategories.map(c => /*#__PURE__*/React.createElement(MenuItem, {\n    key: c.type,\n    value: c.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, c.type))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    label: \"Amount\",\n    value: formData.amount,\n    onChange: e => setFormData({\n      ...formData,\n      amount: e.target.value\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Date\",\n    type: \"date\",\n    value: formData.date,\n    onChange: e => setFormData({\n      ...formData,\n      date: formatDate(e.target.value)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: createTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, \"Create\"));\n};\n_s(NewTransactionForm, \"jrK71oWgcnmYQu7qFhPiRdHpBik=\", false, function () {\n  return [useStyles];\n});\n_c = NewTransactionForm;\nexport default NewTransactionForm;\nvar _c;\n$RefreshReg$(_c, \"NewTransactionForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","TextField","Typography","Grid","Button","FormControl","InputLabel","Select","MenuItem","v4","uuidv4","Snackbar","formatDate","ExpenseTrackerContext","incomeCategories","expenseCategories","useStyles","initialState","amount","category","type","date","Date","NewTransactionForm","_s","classes","addTransaction","formData","setFormData","transcript","setTranscript","recognition","setRecognition","listening","setListening","open","setOpen","createTransaction","Number","isNaN","includes","map","iC","id","speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","speechToText","Array","from","results","result","join","startListening","start","stopListening","stop","commands","toLowerCase","split","prevData","forEach","command","index","length","amountValue","categoryValue","dateValue","slice","selectedCategories","createElement","container","spacing","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","item","xs","align","variant","gutterBottom","className","style","display","justifyContent","gap","color","onClick","disabled","fullWidth","value","onChange","e","target","c","key","label","button","_c","$RefreshReg$"],"sources":["C:/mern stack/speechly_expense_tracker_project/src/components/Main/Form/Form.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [recognition, setRecognition] = useState(null);\r\n  const [listening, setListening] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const speechRecognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n    speechRecognition.continuous = true;\r\n    speechRecognition.interimResults = true;\r\n    speechRecognition.lang = 'en-US';\r\n\r\n    speechRecognition.onresult = (event) => {\r\n      const speechToText = Array.from(event.results)\r\n        .map((result) => result[0].transcript)\r\n        .join('');\r\n      setTranscript(speechToText);\r\n    };\r\n\r\n    setRecognition(speechRecognition);\r\n  }, []);\r\n\r\n  const startListening = () => {\r\n    if (recognition) {\r\n      recognition.start();\r\n      setListening(true);\r\n    }\r\n  };\r\n\r\n  const stopListening = () => {\r\n    if (recognition) {\r\n      recognition.stop();\r\n      setListening(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (transcript) {\r\n      const commands = transcript.toLowerCase().split(' ');\r\n\r\n      if (commands.includes('add') && commands.includes('expense')) {\r\n        setFormData((prevData) => ({ ...prevData, type: 'Expense' }));\r\n      } else if (commands.includes('add') && commands.includes('income')) {\r\n        setFormData((prevData) => ({ ...prevData, type: 'Income' }));\r\n      } else if (commands.includes('create') || commands.includes('finish') || commands.includes('save')) {\r\n        createTransaction();\r\n      } else if (commands.includes('cancel') || commands.includes('delete') || commands.includes('remove') || commands.includes('clear')) {\r\n        setFormData(initialState);\r\n      } else {\r\n        commands.forEach((command, index) => {\r\n          if (command === 'amount' && index < commands.length - 1) {\r\n            const amountValue = commands[index + 1];\r\n            if (!isNaN(amountValue)) {\r\n              setFormData((prevData) => ({ ...prevData, amount: amountValue }));\r\n            }\r\n          } else if (command === 'category' && index < commands.length - 1) {\r\n            const categoryValue = commands[index + 1];\r\n            setFormData((prevData) => ({ ...prevData, category: categoryValue }));\r\n          } else if (command === 'date' && index < commands.length - 1) {\r\n            const dateValue = commands.slice(index + 1).join(' ');\r\n            setFormData((prevData) => ({ ...prevData, date: formatDate(new Date(dateValue)) }));\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [transcript]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {transcript ? <div className=\"segment\">{transcript}</div> : 'Start speaking to add a transaction...'}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center', gap: '10px' }}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={startListening} disabled={listening}>\r\n          Start Listening\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={stopListening} disabled={!listening}>\r\n          Stop Listening\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Date\"\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })}\r\n        />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}