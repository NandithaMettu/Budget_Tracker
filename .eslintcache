[{"C:\\mern stack\\speechly_expense_tracker_project\\src\\index.js":"1","C:\\mern stack\\speechly_expense_tracker_project\\src\\App.js":"2","C:\\mern stack\\speechly_expense_tracker_project\\src\\context\\context.js":"3","C:\\mern stack\\speechly_expense_tracker_project\\src\\styles.js":"4","C:\\mern stack\\speechly_expense_tracker_project\\src\\context\\contextReducer.js":"5","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\index.js":"6","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\InfoCard.jsx":"7","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Snackbar\\Snackbar.jsx":"8","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\Main.jsx":"9","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Snackbar\\styles.js":"10","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\styles.js":"11","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\Form.jsx":"12","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\List\\List.jsx":"13","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\List\\styles.js":"14","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\styles.js":"15","C:\\mern stack\\speechly_expense_tracker_project\\src\\constants\\categories.js":"16","C:\\mern stack\\speechly_expense_tracker_project\\src\\utils\\formatDate.js":"17","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Details\\Details.jsx":"18","C:\\mern stack\\speechly_expense_tracker_project\\src\\useTransactions.js":"19","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Details\\styles.js":"20"},{"size":261,"mtime":1717321679038,"results":"21","hashOfConfig":"22"},{"size":871,"mtime":1717321931540,"results":"23","hashOfConfig":"22"},{"size":2032,"mtime":1717308984774,"results":"24","hashOfConfig":"22"},{"size":582,"mtime":1717308984777,"results":"25","hashOfConfig":"22"},{"size":583,"mtime":1717308984775,"results":"26","hashOfConfig":"22"},{"size":216,"mtime":1717308984773,"results":"27","hashOfConfig":"22"},{"size":460,"mtime":1717308984764,"results":"28","hashOfConfig":"22"},{"size":797,"mtime":1717308984771,"results":"29","hashOfConfig":"22"},{"size":1158,"mtime":1723563618467,"results":"30","hashOfConfig":"22"},{"size":206,"mtime":1717308984772,"results":"31","hashOfConfig":"22"},{"size":514,"mtime":1717308984770,"results":"32","hashOfConfig":"22"},{"size":6415,"mtime":1717322932372,"results":"33","hashOfConfig":"22"},{"size":1403,"mtime":1717308984767,"results":"34","hashOfConfig":"22"},{"size":416,"mtime":1717308984768,"results":"35","hashOfConfig":"22"},{"size":247,"mtime":1717308984766,"results":"36","hashOfConfig":"22"},{"size":1693,"mtime":1717308984774,"results":"37","hashOfConfig":"22"},{"size":335,"mtime":1717313436241,"results":"38","hashOfConfig":"22"},{"size":725,"mtime":1717308984763,"results":"39","hashOfConfig":"22"},{"size":1124,"mtime":1717308984778,"results":"40","hashOfConfig":"22"},{"size":247,"mtime":1717308984763,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1jkkiux",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\mern stack\\speechly_expense_tracker_project\\src\\index.js",[],["84","85"],"C:\\mern stack\\speechly_expense_tracker_project\\src\\App.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\context\\context.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\styles.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\context\\contextReducer.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\index.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\InfoCard.jsx",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\Main.jsx",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Snackbar\\styles.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\styles.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\Form.jsx",["86"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [recognition, setRecognition] = useState(null);\r\n  const [listening, setListening] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const speechRecognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n    speechRecognition.continuous = true;\r\n    speechRecognition.interimResults = true;\r\n    speechRecognition.lang = 'en-US';\r\n\r\n    speechRecognition.onresult = (event) => {\r\n      const speechToText = Array.from(event.results)\r\n        .map((result) => result[0].transcript)\r\n        .join('');\r\n      setTranscript(speechToText);\r\n    };\r\n\r\n    setRecognition(speechRecognition);\r\n  }, []);\r\n\r\n  const startListening = () => {\r\n    if (recognition) {\r\n      recognition.start();\r\n      setListening(true);\r\n    }\r\n  };\r\n\r\n  const stopListening = () => {\r\n    if (recognition) {\r\n      recognition.stop();\r\n      setListening(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (transcript) {\r\n      const commands = transcript.toLowerCase().split(' ');\r\n\r\n      if (commands.includes('add') && commands.includes('expense')) {\r\n        setFormData((prevData) => ({ ...prevData, type: 'Expense' }));\r\n      } else if (commands.includes('add') && commands.includes('income')) {\r\n        setFormData((prevData) => ({ ...prevData, type: 'Income' }));\r\n      } else if ((commands.includes('create') || commands.includes('finish') || commands.includes('save')) && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      } else if (commands.includes('cancel') || commands.includes('delete') || commands.includes('remove') || commands.includes('clear')) {\r\n        setFormData(initialState);\r\n      } else {\r\n        commands.forEach((command, index) => {\r\n          if (command === 'amount' && index < commands.length - 1) {\r\n            const amountValue = commands[index + 1];\r\n            if (!isNaN(amountValue)) {\r\n              setFormData((prevData) => ({ ...prevData, amount: amountValue }));\r\n            }\r\n          } else if (command === 'category' && index < commands.length - 1) {\r\n            const categoryValue = commands[index + 1];\r\n            setFormData((prevData) => ({ ...prevData, category: categoryValue }));\r\n          } else if (command === 'date' && index < commands.length - 1) {\r\n            const dateValue = commands.slice(index + 1).join(' ');\r\n            setFormData((prevData) => ({ ...prevData, date: formatDate(new Date(dateValue)) }));\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [transcript]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {transcript ? <div className=\"segment\">{transcript}</div> : 'Start speaking to add a transaction...'}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center', gap: '10px' }}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={startListening} disabled={listening}>\r\n          Start Listening\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={stopListening} disabled={!listening}>\r\n          Stop Listening\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Date\"\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })}\r\n        />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\List\\List.jsx",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\List\\styles.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\styles.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\constants\\categories.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\utils\\formatDate.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Details\\Details.jsx",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\useTransactions.js",[],"C:\\mern stack\\speechly_expense_tracker_project\\src\\components\\Details\\styles.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":100,"column":6,"nodeType":"93","endLine":100,"endColumn":18,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction', 'formData.amount', 'formData.category', 'formData.date', and 'formData.type'. Either include them or remove the dependency array.","ArrayExpression",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [createTransaction, formData.amount, formData.category, formData.date, formData.type, transcript]",{"range":"100","text":"101"},[3976,3988],"[createTransaction, formData.amount, formData.category, formData.date, formData.type, transcript]"]